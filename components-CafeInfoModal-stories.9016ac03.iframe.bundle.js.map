{"version":3,"file":"components-CafeInfoModal-stories.9016ac03.iframe.bundle.js","mappings":";;;;;;;AA0CA;AAGA;AACA;AACA;AAGA;AACA;AACA;AAGA;;;AAKA;AACA;AACA;;AAEA;AAGA;AACA;AACA;AAGA;AACA;AACA;AAGA;;;;;;;;;;;;;AAaA;;;;;;;;;;;;;;;;;AAiBA;;;;AAIA;;;;;AAKA","sources":["webpack://yozm-cafe/./src/components/CafeInfoModal.tsx"],"sourcesContent":["import { useState } from 'react';\nimport { RiArrowUpDoubleLine } from 'react-icons/ri';\nimport { SlLocationPin } from 'react-icons/sl';\nimport { styled } from 'styled-components';\n\ntype CafeInfoModalProps = {\n  title: string;\n  address: string;\n  content: string;\n};\n\nconst CafeInfoModal = ({ title, address, content }: CafeInfoModalProps) => {\n  const [isOpen, setIsOpen] = useState(false);\n\n  return (\n    <Container>\n      <Title>{title}</Title>\n      <Address>\n        <LocationPinIcon />\n        {address}\n      </Address>\n      <Modal className={isOpen ? 'active' : ''} onClick={() => setIsOpen(!isOpen)}>\n        {!isOpen && (\n          <ArrowDownContainer>\n            <ArrowUpIcon />\n          </ArrowDownContainer>\n        )}\n        <Content>{content}</Content>\n      </Modal>\n    </Container>\n  );\n};\n\nexport default CafeInfoModal;\n\nconst Container = styled.div`\n  overflow: hidden;\n  display: flex;\n  flex-direction: column;\n\n  height: 80px;\n  max-height: 80px;\n  margin-left: ${({ theme }) => theme.space[4]};\n`;\n\nconst ArrowUpIcon = styled(RiArrowUpDoubleLine)`\n  font-size: ${({ theme }) => theme.fontSize['3xl']};\n  color: ${({ theme }) => theme.color.white};\n`;\n\nconst LocationPinIcon = styled(SlLocationPin)`\n  margin-right: ${({ theme }) => theme.space[1]};\n  font-size: ${({ theme }) => theme.fontSize.sm};\n`;\n\nconst ArrowDownContainer = styled.div`\n  display: flex;\n  justify-content: center;\n`;\n\nconst Title = styled.h1`\n  padding-bottom: ${({ theme }) => theme.space['1.5']};\n  font-size: ${({ theme }) => theme.fontSize['3xl']};\n  font-weight: bolder;\n  color: ${({ theme }) => theme.color.white};\n`;\n\nconst Address = styled.h2`\n  font-size: ${({ theme }) => theme.fontSize.lg};\n  color: ${({ theme }) => theme.color.white};\n`;\n\nconst Content = styled.p`\n  margin-top: ${({ theme }) => theme.space[5]};\n  color: ${({ theme }) => theme.color.gray};\n`;\n\nconst Modal = styled.main`\n  will-change: transform;\n\n  position: absolute;\n  bottom: 0;\n\n  display: flex;\n  flex: 1;\n  flex-direction: column;\n  gap: 8px;\n\n  width: 100%;\n  height: 90px;\n  padding: ${({ theme }) => theme.space[4]};\n\n  transition: all 0.3s;\n\n  &:not(.active):hover {\n    cursor: pointer;\n    height: 100px;\n  }\n\n  &.active {\n    right: 0;\n    bottom: 0;\n    left: 0;\n\n    height: 500px;\n\n    opacity: 1;\n    background: ${({ theme }) => theme.color.white};\n    backdrop-filter: none;\n  }\n\n  & > ${Content} {\n    opacity: 0;\n    transition: opacity 0.2s;\n  }\n\n  &.active > ${Content} {\n    opacity: 1;\n  }\n`;\n"],"names":[],"sourceRoot":""}