"use strict";(self.webpackChunkyozm_cafe=self.webpackChunkyozm_cafe||[]).push([[371],{"./node_modules/@tanstack/react-query/build/lib/useMutation.mjs":(__unused_webpack_module,__webpack_exports__,__webpack_require__)=>{__webpack_require__.d(__webpack_exports__,{D:()=>useMutation});var react=__webpack_require__("./node_modules/react/index.js"),useSyncExternalStore=__webpack_require__("./node_modules/@tanstack/react-query/build/lib/useSyncExternalStore.mjs"),utils=__webpack_require__("./node_modules/@tanstack/query-core/build/lib/utils.mjs");var lib_notifyManager=__webpack_require__("./node_modules/@tanstack/query-core/build/lib/notifyManager.mjs"),subscribable=__webpack_require__("./node_modules/@tanstack/query-core/build/lib/subscribable.mjs");class MutationObserver extends subscribable.l{constructor(client,options){super(),this.client=client,this.setOptions(options),this.bindMethods(),this.updateResult()}bindMethods(){this.mutate=this.mutate.bind(this),this.reset=this.reset.bind(this)}setOptions(options){var _this$currentMutation;const prevOptions=this.options;this.options=this.client.defaultMutationOptions(options),(0,utils.VS)(prevOptions,this.options)||this.client.getMutationCache().notify({type:"observerOptionsUpdated",mutation:this.currentMutation,observer:this}),null==(_this$currentMutation=this.currentMutation)||_this$currentMutation.setOptions(this.options)}onUnsubscribe(){var _this$currentMutation2;this.hasListeners()||(null==(_this$currentMutation2=this.currentMutation)||_this$currentMutation2.removeObserver(this))}onMutationUpdate(action){this.updateResult();const notifyOptions={listeners:!0};"success"===action.type?notifyOptions.onSuccess=!0:"error"===action.type&&(notifyOptions.onError=!0),this.notify(notifyOptions)}getCurrentResult(){return this.currentResult}reset(){this.currentMutation=void 0,this.updateResult(),this.notify({listeners:!0})}mutate(variables,options){return this.mutateOptions=options,this.currentMutation&&this.currentMutation.removeObserver(this),this.currentMutation=this.client.getMutationCache().build(this.client,{...this.options,variables:void 0!==variables?variables:this.options.variables}),this.currentMutation.addObserver(this),this.currentMutation.execute()}updateResult(){const state=this.currentMutation?this.currentMutation.state:{context:void 0,data:void 0,error:null,failureCount:0,failureReason:null,isPaused:!1,status:"idle",variables:void 0},result={...state,isLoading:"loading"===state.status,isSuccess:"success"===state.status,isError:"error"===state.status,isIdle:"idle"===state.status,mutate:this.mutate,reset:this.reset};this.currentResult=result}notify(options){lib_notifyManager.V.batch((()=>{var _this$mutateOptions$o,_this$mutateOptions,_this$mutateOptions$o2,_this$mutateOptions2;if(this.mutateOptions&&this.hasListeners())if(options.onSuccess)null==(_this$mutateOptions$o=(_this$mutateOptions=this.mutateOptions).onSuccess)||_this$mutateOptions$o.call(_this$mutateOptions,this.currentResult.data,this.currentResult.variables,this.currentResult.context),null==(_this$mutateOptions$o2=(_this$mutateOptions2=this.mutateOptions).onSettled)||_this$mutateOptions$o2.call(_this$mutateOptions2,this.currentResult.data,null,this.currentResult.variables,this.currentResult.context);else if(options.onError){var _this$mutateOptions$o3,_this$mutateOptions3,_this$mutateOptions$o4,_this$mutateOptions4;null==(_this$mutateOptions$o3=(_this$mutateOptions3=this.mutateOptions).onError)||_this$mutateOptions$o3.call(_this$mutateOptions3,this.currentResult.error,this.currentResult.variables,this.currentResult.context),null==(_this$mutateOptions$o4=(_this$mutateOptions4=this.mutateOptions).onSettled)||_this$mutateOptions$o4.call(_this$mutateOptions4,void 0,this.currentResult.error,this.currentResult.variables,this.currentResult.context)}options.listeners&&this.listeners.forEach((({listener})=>{listener(this.currentResult)}))}))}}var QueryClientProvider=__webpack_require__("./node_modules/@tanstack/react-query/build/lib/QueryClientProvider.mjs"),lib_utils=__webpack_require__("./node_modules/@tanstack/react-query/build/lib/utils.mjs");function useMutation(arg1,arg2,arg3){const options=(0,utils.lV)(arg1,arg2,arg3),queryClient=(0,QueryClientProvider.NL)({context:options.context}),[observer]=react.useState((()=>new MutationObserver(queryClient,options)));react.useEffect((()=>{observer.setOptions(options)}),[observer,options]);const result=(0,useSyncExternalStore.$)(react.useCallback((onStoreChange=>observer.subscribe(lib_notifyManager.V.batchCalls(onStoreChange))),[observer]),(()=>observer.getCurrentResult()),(()=>observer.getCurrentResult())),mutate=react.useCallback(((variables,mutateOptions)=>{observer.mutate(variables,mutateOptions).catch(noop)}),[observer]);if(result.error&&(0,lib_utils.L)(observer.options.useErrorBoundary,[result.error]))throw result.error;return{...result,mutate,mutateAsync:result.mutate}}function noop(){}},"./src/components/LikedCafeList.stories.tsx":(__unused_webpack_module,__webpack_exports__,__webpack_require__)=>{__webpack_require__.r(__webpack_exports__),__webpack_require__.d(__webpack_exports__,{Default:()=>Default,__namedExportsOrder:()=>__namedExportsOrder,default:()=>LikedCafeList_stories});var react=__webpack_require__("./node_modules/react/index.js"),styled_components_browser_esm=__webpack_require__("./node_modules/styled-components/dist/styled-components.browser.esm.js");const hooks_useIntersection=(ref,options={})=>{const[entry,setEntry]=(0,react.useState)(null);return(0,react.useEffect)((()=>{if(ref.current){const observer=new IntersectionObserver((entries=>{setEntry(entries[0])}),options);return observer.observe(ref.current),()=>{setEntry(null),observer.disconnect()}}}),[ref.current,options.threshold,options.root,options.rootMargin]),entry};var utils=__webpack_require__("./node_modules/@tanstack/query-core/build/lib/utils.mjs"),queryObserver=__webpack_require__("./node_modules/@tanstack/query-core/build/lib/queryObserver.mjs");function infiniteQueryBehavior(){return{onFetch:context=>{context.fetchFn=()=>{var _context$fetchOptions,_context$fetchOptions2,_context$fetchOptions3,_context$fetchOptions4,_context$state$data,_context$state$data2;const refetchPage=null==(_context$fetchOptions=context.fetchOptions)||null==(_context$fetchOptions2=_context$fetchOptions.meta)?void 0:_context$fetchOptions2.refetchPage,fetchMore=null==(_context$fetchOptions3=context.fetchOptions)||null==(_context$fetchOptions4=_context$fetchOptions3.meta)?void 0:_context$fetchOptions4.fetchMore,pageParam=null==fetchMore?void 0:fetchMore.pageParam,isFetchingNextPage="forward"===(null==fetchMore?void 0:fetchMore.direction),isFetchingPreviousPage="backward"===(null==fetchMore?void 0:fetchMore.direction),oldPages=(null==(_context$state$data=context.state.data)?void 0:_context$state$data.pages)||[],oldPageParams=(null==(_context$state$data2=context.state.data)?void 0:_context$state$data2.pageParams)||[];let newPageParams=oldPageParams,cancelled=!1;const queryFn=context.options.queryFn||(()=>Promise.reject("Missing queryFn for queryKey '"+context.options.queryHash+"'")),buildNewPages=(pages,param,page,previous)=>(newPageParams=previous?[param,...newPageParams]:[...newPageParams,param],previous?[page,...pages]:[...pages,page]),fetchPage=(pages,manual,param,previous)=>{if(cancelled)return Promise.reject("Cancelled");if(void 0===param&&!manual&&pages.length)return Promise.resolve(pages);const queryFnContext={queryKey:context.queryKey,pageParam:param,meta:context.options.meta};var object;object=queryFnContext,Object.defineProperty(object,"signal",{enumerable:!0,get:()=>{var _context$signal,_context$signal2;return null!=(_context$signal=context.signal)&&_context$signal.aborted?cancelled=!0:null==(_context$signal2=context.signal)||_context$signal2.addEventListener("abort",(()=>{cancelled=!0})),context.signal}});const queryFnResult=queryFn(queryFnContext);return Promise.resolve(queryFnResult).then((page=>buildNewPages(pages,param,page,previous)))};let promise;if(oldPages.length)if(isFetchingNextPage){const manual=void 0!==pageParam,param=manual?pageParam:getNextPageParam(context.options,oldPages);promise=fetchPage(oldPages,manual,param)}else if(isFetchingPreviousPage){const manual=void 0!==pageParam,param=manual?pageParam:getPreviousPageParam(context.options,oldPages);promise=fetchPage(oldPages,manual,param,!0)}else{newPageParams=[];const manual=void 0===context.options.getNextPageParam;promise=!refetchPage||!oldPages[0]||refetchPage(oldPages[0],0,oldPages)?fetchPage([],manual,oldPageParams[0]):Promise.resolve(buildNewPages([],oldPageParams[0],oldPages[0]));for(let i=1;i<oldPages.length;i++)promise=promise.then((pages=>{if(!refetchPage||!oldPages[i]||refetchPage(oldPages[i],i,oldPages)){const param=manual?oldPageParams[i]:getNextPageParam(context.options,pages);return fetchPage(pages,manual,param)}return Promise.resolve(buildNewPages(pages,oldPageParams[i],oldPages[i]))}))}else promise=fetchPage([]);return promise.then((pages=>({pages,pageParams:newPageParams})))}}}}function getNextPageParam(options,pages){return null==options.getNextPageParam?void 0:options.getNextPageParam(pages[pages.length-1],pages)}function getPreviousPageParam(options,pages){return null==options.getPreviousPageParam?void 0:options.getPreviousPageParam(pages[0],pages)}function hasNextPage(options,pages){if(options.getNextPageParam&&Array.isArray(pages)){const nextPageParam=getNextPageParam(options,pages);return null!=nextPageParam&&!1!==nextPageParam}}function hasPreviousPage(options,pages){if(options.getPreviousPageParam&&Array.isArray(pages)){const previousPageParam=getPreviousPageParam(options,pages);return null!=previousPageParam&&!1!==previousPageParam}}class InfiniteQueryObserver extends queryObserver.z{constructor(client,options){super(client,options)}bindMethods(){super.bindMethods(),this.fetchNextPage=this.fetchNextPage.bind(this),this.fetchPreviousPage=this.fetchPreviousPage.bind(this)}setOptions(options,notifyOptions){super.setOptions({...options,behavior:infiniteQueryBehavior()},notifyOptions)}getOptimisticResult(options){return options.behavior=infiniteQueryBehavior(),super.getOptimisticResult(options)}fetchNextPage({pageParam,...options}={}){return this.fetch({...options,meta:{fetchMore:{direction:"forward",pageParam}}})}fetchPreviousPage({pageParam,...options}={}){return this.fetch({...options,meta:{fetchMore:{direction:"backward",pageParam}}})}createResult(query,options){var _state$fetchMeta,_state$fetchMeta$fetc,_state$fetchMeta2,_state$fetchMeta2$fet,_state$data,_state$data2;const{state}=query,result=super.createResult(query,options),{isFetching,isRefetching}=result,isFetchingNextPage=isFetching&&"forward"===(null==(_state$fetchMeta=state.fetchMeta)||null==(_state$fetchMeta$fetc=_state$fetchMeta.fetchMore)?void 0:_state$fetchMeta$fetc.direction),isFetchingPreviousPage=isFetching&&"backward"===(null==(_state$fetchMeta2=state.fetchMeta)||null==(_state$fetchMeta2$fet=_state$fetchMeta2.fetchMore)?void 0:_state$fetchMeta2$fet.direction);return{...result,fetchNextPage:this.fetchNextPage,fetchPreviousPage:this.fetchPreviousPage,hasNextPage:hasNextPage(options,null==(_state$data=state.data)?void 0:_state$data.pages),hasPreviousPage:hasPreviousPage(options,null==(_state$data2=state.data)?void 0:_state$data2.pages),isFetchingNextPage,isFetchingPreviousPage,isRefetching:isRefetching&&!isFetchingNextPage&&!isFetchingPreviousPage}}}var useBaseQuery=__webpack_require__("./node_modules/@tanstack/react-query/build/lib/useBaseQuery.mjs");var client=__webpack_require__("./src/client.ts"),useUser=__webpack_require__("./src/hooks/useUser.ts");const hooks_useLikedCafes=()=>{const{data:user}=(0,useUser.Z)(),queryResult=function useInfiniteQuery(arg1,arg2,arg3){const options=(0,utils._v)(arg1,arg2,arg3);return(0,useBaseQuery.r)(options,InfiniteQueryObserver)}({queryKey:["likedCafes",user?.id],queryFn:({pageParam=1})=>client.Z.getLikedCafeList(user?.id,pageParam).then((likedCafes=>({likedCafes,page:pageParam}))),getNextPageParam:lastPage=>lastPage.likedCafes.length>0?lastPage.page+1:void 0,enabled:!!user});return{...queryResult,data:queryResult.data,likedCafes:queryResult.data?.pages.flatMap((({likedCafes})=>likedCafes))??[]}};var jsx_runtime=__webpack_require__("./node_modules/react/jsx-runtime.js");const LikedCafeList=()=>{const{likedCafes,fetchNextPage,isFetching,hasNextPage}=hooks_useLikedCafes(),ref=(0,react.useRef)(null),intersection=hooks_useIntersection(ref,{threshold:1});return hasNextPage&&!isFetching&&intersection?.isIntersecting&&fetchNextPage(),(0,jsx_runtime.jsxs)(Container,{children:[(0,jsx_runtime.jsx)(TitleContainer,{children:(0,jsx_runtime.jsx)(Title,{children:"좋아요한 카페 리스트"})}),(0,jsx_runtime.jsxs)(ScrollContainer,{children:[(0,jsx_runtime.jsx)(GridContainer,{children:likedCafes.map((cafe=>(0,jsx_runtime.jsx)(CafeImage,{src:cafe.imageUrl,alt:`Cafe ${cafe.cafeId}`},cafe.cafeId)))}),(0,jsx_runtime.jsx)(SensorContainer,{ref})]})]})};LikedCafeList.displayName="LikedCafeList";const components_LikedCafeList=LikedCafeList,Container=styled_components_browser_esm.zo.section`
  display: flex;
  flex-direction: column;
  height: 100%;
`,Title=styled_components_browser_esm.zo.h1`
  margin-bottom: ${({theme})=>theme.space[3]};
  color: ${({theme})=>theme.color.gray};
`,TitleContainer=styled_components_browser_esm.zo.article`
  display: flex;
  justify-content: center;
  margin-bottom: ${({theme})=>theme.space[3]};
  border-bottom: solid ${({theme})=>theme.color.line.secondary};
`,ScrollContainer=styled_components_browser_esm.zo.div`
  overflow-y: scroll;
  flex: 1;
`,GridContainer=styled_components_browser_esm.zo.div`
  display: grid;
  grid-template-columns: repeat(3, 1fr); /* 한 줄에 3개의 열 */
  gap: ${({theme})=>theme.space[.5]};
  margin-bottom: ${({theme})=>theme.space[10]};
`,CafeImage=styled_components_browser_esm.zo.img`
  aspect-ratio: 1 / 1;
`,SensorContainer=styled_components_browser_esm.zo.div``,LikedCafeList_stories={title:"LikedCafeList",component:components_LikedCafeList},Default={args:{}};Default.parameters={...Default.parameters,docs:{...Default.parameters?.docs,source:{originalSource:"{\n  args: {}\n}",...Default.parameters?.docs?.source}}};const __namedExportsOrder=["Default"]},"./src/client.ts":(__unused_webpack_module,__webpack_exports__,__webpack_require__)=>{__webpack_require__.d(__webpack_exports__,{Z:()=>__WEBPACK_DEFAULT_EXPORT__});class ClientNetworkError extends Error{constructor(){super("인터넷에 연결할 수 없습니다")}}const __WEBPACK_DEFAULT_EXPORT__=new class Client{isAccessTokenRefreshing=!1;accessToken=null;accessTokenRefreshListener=null;onAccessTokenRefresh(listener){this.accessTokenRefreshListener=listener}async fetch(input,init){try{const fetchFn=()=>fetch(`/api${input}`,{...init,headers:{...init?.headers,...this.accessToken?{Authorization:`Bearer ${this.accessToken}`}:{}}});let response=await fetchFn();if(!response.ok){if(401===response.status&&!this.isAccessTokenRefreshing){this.isAccessTokenRefreshing=!0;const accessToken=await this.refreshAccessToken();this.accessToken=accessToken,this.accessTokenRefreshListener?.(accessToken),this.isAccessTokenRefreshing=!1,response=await fetchFn()}if(!response.ok)throw this.accessTokenRefreshListener?.(null),response}return response}catch(error){throw new ClientNetworkError}}async fetchJson(input,init){return this.fetch(input,init).then((response=>response.json()))}setAccessToken(accessToken){this.accessToken=accessToken}getAuthUrls(){return this.fetchJson("/auth/urls")}getCafes(){return this.fetchJson("/cafes")}getCafesForGuest(page=1){return this.fetchJson(`/cafes/guest?page=${page}`)}getUser(userId){return this.fetchJson(`/members/${userId}`)}getLikedCafeList(userId,page=1){return this.fetchJson(`/members/${userId}/liked-cafes?page=${page}`)}async setLikedCafe(cafeId,isLiked){await this.fetch(`/cafes/${cafeId}/likes?isLiked=${isLiked}`,{method:"POST"})}addFavoriteCafe(cafeId){return this.fetchJson(`/cafes/${cafeId}/likes`,{method:"POST"})}removeFavoriteCafe(cafeId){return this.fetchJson(`/cafes/${cafeId}/likes`,{method:"DELETE"})}issueAccessToken(provider,code){return this.fetchJson(`/auth/${provider}?code=${code}`,{method:"POST"}).then((data=>data.token))}refreshAccessToken(){return this.fetchJson("/auth").then((data=>data.token))}async clearRefreshToken(){await this.fetch("/auth",{method:"DELETE"})}}},"./src/hooks/useSuspenseQuery.ts":(__unused_webpack_module,__webpack_exports__,__webpack_require__)=>{__webpack_require__.d(__webpack_exports__,{Z:()=>__WEBPACK_DEFAULT_EXPORT__});var _tanstack_react_query__WEBPACK_IMPORTED_MODULE_0__=__webpack_require__("./node_modules/@tanstack/react-query/build/lib/useQuery.mjs");const __WEBPACK_DEFAULT_EXPORT__=function useSuspenseQuery(options){const queryResult=(0,_tanstack_react_query__WEBPACK_IMPORTED_MODULE_0__.a)({...options,suspense:!0});return{...queryResult,isIdle:"isIdle"in queryResult&&queryResult.isIdle}}},"./src/hooks/useUser.ts":(__unused_webpack_module,__webpack_exports__,__webpack_require__)=>{__webpack_require__.d(__webpack_exports__,{Z:()=>hooks_useUser});var client=__webpack_require__("./src/client.ts"),useMutation=__webpack_require__("./node_modules/@tanstack/react-query/build/lib/useMutation.mjs"),react=__webpack_require__("./node_modules/react/index.js");const hooks_usePersistedState=(key,initialValue)=>{const serializedItem=localStorage.getItem(key),[state,setState]=(0,react.useState)(serializedItem?JSON.parse(serializedItem):initialValue);return(0,react.useEffect)((()=>{localStorage.setItem(key,JSON.stringify(state))}),[state]),[state,setState]};var jsx_runtime=__webpack_require__("./node_modules/react/jsx-runtime.js");const AuthContext=(0,react.createContext)(null),AuthProvider=props=>{const{children}=props,[accessToken,setAccessToken]=hooks_usePersistedState("accessToken",null),identity=(0,react.useMemo)((()=>{if(client.Z.setAccessToken(accessToken),client.Z.onAccessTokenRefresh(setAccessToken),!accessToken)return null;const[header,payload,verifySignature]=accessToken.split(".");return JSON.parse(window.atob(payload))}),[accessToken]),contextValue=(0,react.useMemo)((()=>({accessToken,setAccessToken,identity})),[accessToken,setAccessToken,identity]);return(0,jsx_runtime.jsx)(AuthContext.Provider,{value:contextValue,children})};AuthProvider.displayName="AuthProvider";const context_AuthContext=AuthContext;try{AuthProvider.displayName="AuthProvider",AuthProvider.__docgenInfo={description:"",displayName:"AuthProvider",props:{}},"undefined"!=typeof STORYBOOK_REACT_CLASSES&&(STORYBOOK_REACT_CLASSES["src/context/AuthContext.tsx#AuthProvider"]={docgenInfo:AuthProvider.__docgenInfo,name:"AuthProvider",path:"src/context/AuthContext.tsx#AuthProvider"})}catch(__react_docgen_typescript_loader_error){}const hooks_useAuth=()=>{const authContext=(0,react.useContext)(context_AuthContext);if(!authContext)throw new Error("AuthProvider를 사용해주셔야 합니다.");const{accessToken,setAccessToken,identity}=authContext,{mutate:issueAccessToken}=(0,useMutation.D)({mutationFn:({provider,code})=>client.Z.issueAccessToken(provider,code),onSettled:accessToken=>{setAccessToken(accessToken??null)}}),{mutate:clearRefreshToken}=(0,useMutation.D)({mutationFn:()=>client.Z.clearRefreshToken()});return{accessToken,issueAccessToken,clearAuthorization:(0,react.useCallback)((()=>(setAccessToken(null),clearRefreshToken())),[clearRefreshToken]),identity}};var useSuspenseQuery=__webpack_require__("./src/hooks/useSuspenseQuery.ts");const hooks_useUser=()=>{const{identity}=hooks_useAuth();return(0,useSuspenseQuery.Z)({queryKey:["user",identity],queryFn:()=>client.Z.getUser(identity?.sub),enabled:!!identity})}}}]);
//# sourceMappingURL=components-LikedCafeList-stories.63dfe326.iframe.bundle.js.map