{"version":3,"file":"components-CafeDetailBottomSheet-stories.1dbf7c9f.iframe.bundle.js","mappings":";;AA+DA;;AAIA;;;;AAMA;;AAEA;;;;;;ACbA;;;;;AAKA;AACA;;AAEA;;;AAGA;;;;;;;;AAUA;AACA;AACA;;AAIA;;;AAGA;AAGA;;AAEA;;AAIA;;;AAGA;AACA;AAGA;;;;;AAKA","sources":["webpack://yozm-cafe/./src/components/OpeningHoursDetail.tsx","webpack://yozm-cafe/./src/components/CafeDetailBottomSheet.tsx"],"sourcesContent":["import { styled } from 'styled-components';\nimport { OpeningHour, OpeningHourDay } from '../types';\n\nconst DAY_MAPPER: Record<OpeningHourDay, string> = {\n  MONDAY: '월',\n  TUESDAY: '화',\n  WEDNESDAY: '수',\n  THURSDAY: '목',\n  FRIDAY: '금',\n  SATURDAY: '토',\n  SUNDAY: '일',\n};\n\ntype OpeningHoursDetailProps = {\n  openingHours: OpeningHour[];\n};\n\nconst OpeningHoursDetail = ({ openingHours }: OpeningHoursDetailProps) => {\n  const getCurrentTime = (): string => {\n    const now = new Date();\n    const hours = now.getHours().toString().padStart(2, '0');\n    const minutes = now.getMinutes().toString().padStart(2, '0');\n\n    return `${hours}:${minutes}`;\n  };\n\n  const today = new Date().toLocaleDateString('en-US', { weekday: 'long' }).toUpperCase();\n  const todayOpeningHour = openingHours.find((openingHour) => openingHour.day === today) ?? null;\n\n  const isOpenedToday = (): boolean => {\n    const currentTime = getCurrentTime();\n\n    if (!todayOpeningHour || !todayOpeningHour.opened) return false;\n\n    return (\n      today === todayOpeningHour.day && todayOpeningHour.open <= currentTime && currentTime <= todayOpeningHour.close\n    );\n  };\n\n  return (\n    <Container>\n      <h3>{isOpenedToday() ? '영업중' : '영업 종료'}</h3>\n      <Summary>\n        {todayOpeningHour?.opened\n          ? `${DAY_MAPPER[todayOpeningHour.day]} ${todayOpeningHour.open} - ${todayOpeningHour.close}`\n          : '휴무'}\n      </Summary>\n\n      <Details>\n        {openingHours.map((openingHour) => (\n          <li key={openingHour.day}>\n            {DAY_MAPPER[openingHour.day]} {openingHour.opened ? `${openingHour.open} - ${openingHour.close}` : '휴무'}\n          </li>\n        ))}\n      </Details>\n    </Container>\n  );\n};\n\nexport default OpeningHoursDetail;\n\nconst Container = styled.div`\n  display: grid;\n  gap: ${({ theme }) => theme.space[2]};\n  align-items: center;\n`;\n\nconst Summary = styled.h3``;\n\nconst Details = styled.ul`\n  display: flex;\n  grid-column: 2;\n  flex-direction: column;\n  gap: ${({ theme }) => theme.space[1]};\n\n  color: ${({ theme }) => theme.color.gray};\n`;\n","import { useEffect } from 'react';\nimport { BsBoxArrowUpRight, BsClock, BsGeoAlt } from 'react-icons/bs';\nimport { styled } from 'styled-components';\nimport { Cafe } from '../types';\nimport OpeningHoursDetail from './OpeningHoursDetail';\n\ntype CafeDetailBottomSheetProps = {\n  show?: boolean;\n  cafe: Cafe;\n  onClose: () => void;\n};\n\nconst CafeDetailBottomSheet = ({ show, cafe, onClose }: CafeDetailBottomSheetProps) => {\n  useEffect(() => {\n    document.addEventListener('click', onClose);\n\n    return () => document.removeEventListener('click', onClose);\n  }, [onClose]);\n\n  const handlePreventClickPropagation: React.MouseEventHandler<HTMLDivElement> = (event) => {\n    event.stopPropagation();\n  };\n\n  return (\n    <Container $show={show ?? false} onClick={handlePreventClickPropagation}>\n      <Title>{cafe.name}</Title>\n      <InfoContainer>\n        <Info>\n          <BsGeoAlt />\n          <a href={cafe.detail.mapUrl} target=\"_blank\">\n            <h3>\n              {cafe.address} <BsBoxArrowUpRight />\n            </h3>\n          </a>\n        </Info>\n        <Info>\n          <BsClock />\n          <OpeningHoursDetail openingHours={cafe.detail.openingHours} />\n        </Info>\n        {/* <Info>\n          <BsTelephone />\n          <h3>000-000-000</h3>\n        </Info> */}\n      </InfoContainer>\n      <Content>\n        {cafe.detail.description.split('\\n').map((paragraph) => (\n          <p>{paragraph}</p>\n        ))}\n      </Content>\n\n      <MoreContentHintGradient />\n    </Container>\n  );\n};\n\nexport default CafeDetailBottomSheet;\n\nconst Container = styled.div<{ $show: boolean }>`\n  position: absolute;\n  bottom: 0;\n\n  overflow-y: auto;\n  display: ${(props) => (props.$show ? 'flex' : 'none')};\n  flex-direction: column;\n\n  width: 100%;\n  height: 450px;\n  padding: ${({ theme }) => theme.space[4]};\n  padding-bottom: ${({ theme }) => theme.space[16]};\n\n  color: ${({ theme }) => theme.color.text.primary};\n  text-shadow: none;\n\n  background: ${({ theme }) => theme.color.white};\n\n  &::-webkit-scrollbar {\n    display: none;\n  }\n  & svg {\n    filter: none !important;\n  }\n`;\n\nconst Title = styled.h1`\n  margin-bottom: ${({ theme }) => theme.space[4]};\n  font-size: ${({ theme }) => theme.fontSize['3xl']};\n  font-weight: bolder;\n`;\n\nconst InfoContainer = styled.div`\n  display: flex;\n  flex-direction: column;\n  gap: ${({ theme }) => theme.space[2]};\n`;\n\nconst Info = styled.div`\n  display: flex;\n  gap: ${({ theme }) => theme.space[2]};\n  align-items: flex-start;\n`;\n\nconst Content = styled.div`\n  display: flex;\n  flex-direction: column;\n  gap: ${({ theme }) => theme.space[2]};\n  margin-top: ${({ theme }) => theme.space[5]};\n`;\n\nconst MoreContentHintGradient = styled.div`\n  position: fixed;\n  bottom: 0;\n\n  width: 475px; /* FIXME: 하드코딩 대신 부모 크기 기반으로 설정하도록 변경하기 */\n  height: ${({ theme }) => theme.space[16]};\n\n  background: linear-gradient(transparent, white);\n`;\n"],"names":[],"sourceRoot":""}